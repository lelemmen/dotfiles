### Commands that are too complex for an alias
### or too simple for a stand-alone script
###
### The aliases should be sourced before the functions, so I can use aliases in the functions.


## Move (a) file(s) to the trash
function trash() {
	mv "$@" ~/.Trash
}


## Resource the .bash_profile
function re-source() {
	source ~/.bash_profile
}


## Clear the personal temporary directory
function clrtmp() {
	unset PERS_TEMP_DIR
	
	# Check if the PERS_TEMP_DIR variable exists and is non-empty
	${PERS_TEMP_DIR:?"is not set or empty."}
	rm -rf $PERS_TEMP_DIR/*	
}


## Change to a directory and list it
function cls() {
	# The output redirection is here becauseÂ {cd -} outputs some stuff 
	cd "$1" &>/dev/null && ls
}

## Make a directory and move into it
function mkcd() {
	mkdir "$1" && cd "$1"
}

## Smart extract
function extract() {

	# If the argument is a regular file, move into cases
	if [ -f "$1" ]; then
		case "$1" in
			*.tar)		tar -zxvf "$1"			;;
			*.tar.gz)	tar -zxvf "$1"			;;
			*.tar.lz)	lzip -d "$1" && extract "$1"	;;
			*.zip)		unzip "$1"			;;
			*)		echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file to extract"
	fi
	
	# Add an option to clean up the directory, i.e. moving the un-extracted file to trash.
	echo -n "Would you like to clean? [y/n]: "
	read user_wants_cleanup

	case $user_wants_cleanup in
		y)
			echo "Cleaning up ..."
			trash "$1"
			echo "Done."
			;;
		n)	;;
		*)
			echo "$(user_wants_cleanup): unknown value [y/n], not cleaning up ..." ;;
	esac
	unset user_wants_cleanup
}


## Open manpages via pdf
function manpdf() {
	# man -t: format output
	# open -a: specify application -f: reads input from standard input
	man -t "$1" | open -fa /Applications/Preview.app
}
